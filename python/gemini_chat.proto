syntax = "proto3";

package geminiChat;

// 定義 Gemini Chat 服務
service GeminiChat {
  // 建立新會話，並可選擇性提供 API 金鑰
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
  
  // 雙向串流：客戶端可以流式送多筆 audio/image 訊息，後端流式回應
  rpc ChatStream(stream ChatRequest) returns (stream ChatResponse);
}

// 新增的會話建立訊息
message CreateSessionRequest {
  optional string gemini_api_key = 1;
  optional string maps_api_key = 2;
}

message CreateSessionResponse {
  string session_id = 1;
  bool success = 2;
  string error_message = 3;
}

// 音訊輸入訊息
message AudioInput {
  bytes data = 1;   // 原始音訊二進位資料 (例如 WAV/PCM) 
  string format = 2;   // 音訊格式 (e.g. "wav", "pcm")
  int32 sample_rate_hz = 3; // 取樣率 (Hz)
}

// 影像輸入訊息
message ImageInput {
  bytes data = 1;
  string format = 2;
  int32 width = 3;
  int32 height = 4;
}

message MultiImageInput {
  repeated ImageInput images = 1;
}

message LocationInput {
  float lat = 1;
  float lng = 2;
}

// 輸入訊息封包：音訊或影像（或文字）
message ChatRequest {
  string session_id = 1;  // 新增會話識別碼
  optional AudioInput audio = 2;
  optional string text = 3;
  optional LocationInput location = 4;
  optional MultiImageInput multi_images = 5;
}

message NavigationResponse {
  string alert = 1;
  bool nav_status = 2;
  string nav_description = 3;
}

message ChatResponse {
  string session_id = 1;  // 新增會話識別碼 
  NavigationResponse nav = 2;
}